var _=Object.defineProperty;var q=(r,t,e)=>t in r?_(r,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):r[t]=e;var u=(r,t,e)=>q(r,typeof t!="symbol"?t+"":t,e);(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))n(i);new MutationObserver(i=>{for(const l of i)if(l.type==="childList")for(const s of l.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&n(s)}).observe(document,{childList:!0,subtree:!0});function e(i){const l={};return i.integrity&&(l.integrity=i.integrity),i.referrerPolicy&&(l.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?l.credentials="include":i.crossOrigin==="anonymous"?l.credentials="omit":l.credentials="same-origin",l}function n(i){if(i.ep)return;i.ep=!0;const l=e(i);fetch(i.href,l)}})();class v{constructor(t,e,n,i){u(this,"position");u(this,"isObstacle",!1);u(this,"g");u(this,"h");u(this,"f");u(this,"parent");this.position=t,this.g=e,this.h=n,this.f=e+n,this.parent=i}}class Q{constructor(t,e){u(this,"width");u(this,"height");u(this,"grid");this.width=t,this.height=e,this.grid=new Array(t*e).fill(null).map((n,i)=>{const l=this.getPosition(i);return new v(l,0,0,null)})}getNode(t){return this.grid[t.y*this.width+t.x]}getPosition(t){const e=t%this.width,n=Math.floor(t/this.width);return{x:e,y:n}}setObstacle(t){const e=this.getNode(t);e.isObstacle=!0}getNeighbors(t){const e=[],{x:n,y:i}=t.position,l=[{x:n,y:i-1},{x:n,y:i+1},{x:n+1,y:i},{x:n-1,y:i}];for(const s of l)this.isValidPosition(s)&&e.push(this.getNode(s));return e}isValidPosition(t){return t.x>=0&&t.x<this.width&&t.y>=0&&t.y<this.height}}class T{constructor(t){u(this,"list");u(this,"size");u(this,"indexMap");u(this,"comparator");this.list=[],this.size=0,this.indexMap=new Map,this.comparator=t}getSize(){return this.size}insert(t){let e=this.size;this.size++,this.list[e]=t,this.indexMap.set(t,e),this.bubbleUp(e)}updatePriority(t){const e=this.indexMap.get(t);return e===void 0?!1:(this.bubbleUp(e),this.bubbleDown(e),!0)}extract(){if(this.size===0)return null;const t=this.list[0];if(this.size--,this.indexMap.delete(t),this.size>0){const e=this.list[this.size];this.list[0]=e,this.indexMap.set(e,0),this.list.pop(),this.bubbleDown(0)}else this.list.pop();return t}peek(){return this.list[0]||null}has(t){return this.indexMap.has(t)}items(){return this.list.slice()}bubbleUp(t){const e=this.list[t];for(;t>0;){const n=this.parent(t),i=this.list[n];if(!this.comparator(e,i))break;this.list[t]=i,this.indexMap.set(i,t),t=n}this.list[t]=e,this.indexMap.set(e,t)}bubbleDown(t){const e=this.list[t],n=Math.floor(this.size/2);for(;t<n;){let i=this.leftChildIndex(t),l=this.list[i];const s=this.rightChildIndex(t);if(s<this.size&&this.comparator(this.list[s],l)&&(i=s,l=this.list[s]),this.comparator(e,l)||!this.comparator(l,e))break;this.list[t]=l,this.indexMap.set(l,t),t=i}this.list[t]=e,this.indexMap.set(e,t)}parent(t){return Math.floor((t-1)/2)}leftChildIndex(t){return 2*t+1}rightChildIndex(t){return 2*t+2}}var C=(r=>(r.MANHATTAN="Manhattan",r.EUCLIDEAN="Euclidean",r))(C||{});class M{constructor(t,e){u(this,"grid");u(this,"heuristic");this.grid=t,this.heuristic=this.getHeuristicFunc(e)}findPath(t,e){if(this.grid.getNode(t).isObstacle||this.grid.getNode(e).isObstacle)throw new Error("findPath: start or end is an obstacle");const n=new Set,i=new T((s,c)=>s.f<c.f),l=new v(t,0,this.heuristic(t,e),null);for(i.insert(l);i.getSize()>0;){const s=i.extract();if(s.position.x===e.x&&s.position.y===e.y)return this.reconstructPath(s);n.add(s);const c=this.grid.getNeighbors(s);for(const a of c){if(n.has(a)||a.isObstacle)continue;const P=s.g+this.heuristic(s.position,a.position);i.has(a)?P<a.g&&(a.g=P,a.f=P+a.h,a.parent=s,i.updatePriority(a)):(a.g=P,a.h=this.heuristic(a.position,e),a.f=a.g+a.h,a.parent=s,i.insert(a))}}return[]}*findPathGenerator(t,e){if(this.grid.getNode(t).isObstacle||this.grid.getNode(e).isObstacle)throw new Error("findPath: start or end is an obstacle");const n=new Set,i=new T((s,c)=>s.f<c.f),l=new v(t,0,this.heuristic(t,e),null);for(i.insert(l);i.getSize()>0;){const s=i.extract();if(n.add(s),yield{current:s,open:i.items(),closed:Array.from(n)},s.position.x===e.x&&s.position.y===e.y)return this.reconstructPath(s);for(const c of this.grid.getNeighbors(s)){if(c.isObstacle||n.has(c))continue;const a=s.g+this.heuristic(s.position,c.position);i.has(c)?a<c.g&&(c.g=a,c.f=a+c.h,c.parent=s,i.updatePriority(c)):(c.g=a,c.h=this.heuristic(c.position,e),c.f=c.g+c.h,c.parent=s,i.insert(c))}}return[]}reconstructPath(t){const e=[];let n=t;for(;n;)e.push(n.position),n=n.parent;return e.reverse(),e}getHeuristicFunc(t){switch(t){case"Manhattan":return M.manhattan;case"Euclidean":return M.euclidean;default:throw new Error("ERROR getHeuristicFunc: invalid heuristic type")}}static manhattan(t,e){return Math.abs(t.x-e.x)+Math.abs(t.y-e.y)}static euclidean(t,e){return Math.sqrt(Math.pow(t.x-e.x,2)+Math.pow(t.y-e.y,2))}}const f=document.getElementById("canvas"),h=f.getContext("2d"),p=document.getElementById("grid_size"),V=document.getElementById("randomize"),b=document.getElementById("start_stop"),O=document.getElementById("speed"),$=document.getElementById("speed_display"),k=document.getElementById("path_length");let d=+p.value;const x={x:0,y:0};let m={x:d-1,y:d-1};const K=.5;let w=!1,B=!1,z=+O.value,D,F,o,g,y,S,H,I;function G(r){let t,e;do{t=new Q(r,r);for(let i=0;i<r*r*K;i++){const l=Math.floor(Math.random()*r),s=Math.floor(Math.random()*r);l===x.x&&s===x.y||l===m.x&&s===m.y||t.setObstacle({x:l,y:s})}e=new M(t,C.MANHATTAN).findPath(x,m)}while(e.length===0);return t}function U(){D=f.width/d,F=f.height/d,o=Math.min(D,F),g=(f.width-o*d)/2,y=(f.height-o*d)/2}function E(){H=new M(S,C.MANHATTAN),I=H.findPathGenerator(x,m),B=!1,k.textContent="Path Length: 0"}function X(){b.textContent="Start",b.classList.remove("btn-warning"),b.classList.add("btn-success")}function W(){b.textContent="Pause",b.classList.remove("btn-success"),b.classList.add("btn-warning")}const R=()=>{for(let r=0;r<d;r++)for(let t=0;t<d;t++){const e=g+r*o,n=y+t*o;h.fillStyle="white",h.fillRect(e,n,o,o),h.strokeStyle="black",h.strokeRect(e,n,o,o)}},A=()=>{h.fillStyle="black";for(let r=0;r<d;r++)for(let t=0;t<d;t++){const e=g+r*o,n=y+t*o;S.getNode({x:r,y:t}).isObstacle&&h.fillRect(e,n,o,o)}},L=()=>{h.fillStyle="green";const r=g+x.x*o,t=y+x.y*o;h.fillRect(r,t,o,o),h.fillStyle="purple";const e=g+m.x*o,n=y+m.y*o;h.fillRect(e,n,o,o)};function N(){h.clearRect(0,0,f.width,f.height),R(),A(),L()}function Y(){if(!w)return;let r=I.next();for(let t=1;t<z&&!r.done;t++)r=I.next();if(r.done){const t=r.value||[];h.clearRect(0,0,f.width,f.height),R(),A(),L(),h.fillStyle="rgba(0,255,0,0.5)",t.forEach(e=>{const n=g+e.x*o,i=y+e.y*o;h.fillRect(n,i,o,o)}),k.textContent=`Path Length: ${t.length}`,w=!1,B=!0,X()}else{const{current:t,open:e=[],closed:n=[]}=r.value||{};if(h.clearRect(0,0,f.width,f.height),R(),A(),n.forEach(i=>{const l=g+i.position.x*o,s=y+i.position.y*o;h.fillStyle="rgba(255,0,0,0.5)",h.fillRect(l,s,o,o)}),e.forEach(i=>{const l=g+i.position.x*o,s=y+i.position.y*o;h.fillStyle="rgba(0,0,255,0.5)",h.fillRect(l,s,o,o)}),t){const i=g+t.position.x*o,l=y+t.position.y*o;h.fillStyle="yellow",h.fillRect(i,l,o,o)}L(),requestAnimationFrame(Y)}}S=G(d);U();E();N();p.onchange=()=>{w||((+p.value<5||+p.value>50)&&(alert("Grid size must be between 5 and 50!"),+p.value<5&&(p.value="5"),+p.value>50&&(p.value="50")),d=+p.value,m={x:d-1,y:d-1},S=G(d),U(),E(),N())};V.onclick=()=>{w||(S=G(d),E(),N())};b.onclick=()=>{w?(w=!1,X()):(B&&(E(),N()),w=!0,W(),Y())};O.oninput=()=>{z=+O.value,$.textContent=`${z}x`};
